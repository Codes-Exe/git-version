version: 2

# Re-usable blocks to reduce boilerplate in job definitions.
references:
  default_machine_job: &default_machine_job
    machine: true
    working_directory: ~/workdir

  set_version_env_variable: &set_version_env_variable
    run:
      name: Define Environment Variable VERSION_NUMBER and ENV at Runtime
      command: |
        echo export VERSION_NUMBER=$(cat ~/workdir/.version) >> $BASH_ENV
        source $BASH_ENV
        echo $VERSION_NUMBER

  compile_crystal: &compile_crystal
    run:
      name: Get version
      command: |
        sudo apt-get update
        sudo apt-get install libevent-core-2.0-5 libevent-dev libevent-extra-2.0-5 libevent-openssl-2.0-5 libevent-pthreads-2.0-5 libgmp-dev libgmpxx4ldbl libssl-dev libxml2-dev libyaml-dev libreadline-dev automake libtool git llvm libpcre3-dev build-essential -y
        wget https://github.com/crystal-lang/crystal/releases/download/0.30.1/crystal_0.30.1-1_amd64.deb
        sudo dpkg -i crystal_0.30.1-1_amd64.deb
        sudo make clean test build

jobs:
  checkout_and_compile:
    <<: *default_machine_job
    steps:
      - checkout
      - *compile_crystal
      - run:
          name: Get version
          command: |
            export VERSION_NUMBER=$(./bin/git-version)
            echo $VERSION_NUMBER >> ~/workdir/.version
      - persist_to_workspace:
          root: ~/
          paths:
            - workdir/*
      - store_artifacts:
          path: bin
  build_docker:
    <<: *default_machine_job
    steps:
      - attach_workspace:
          at: ~/
      - *set_version_env_variable
      - run:
          name: Update git
          command: |
            sudo apt-get update
            sudo apt-get upgrade git
      - run:
          name: Build Docker image
          command: make docker_build
      - run:
          name: Save docker to file
          command: |
            docker save --output docker-image.tar codacy/git-version:$VERSION_NUMBER
      - persist_to_workspace:
          root: ~/
          paths:
            - workdir/docker-image.tar

  publish_versioned:
    <<: *default_machine_job
    environment:
      PROJECT_NAME: ${CIRCLE_PROJECT_REPONAME}
    steps:
      - attach_workspace:
          at: ~/
      - *set_version_env_variable
      - run:
          name: Update git
          command: sudo apt-get install git=2.22.0
      - run:
          name: Load docker from file
          command: docker load --input docker-image.tar
      - run:
          name: Publish images to Docker Hub
          command: make push-docker-image

  publish_latest:
    <<: *default_machine_job
    steps:
      - attach_workspace:
          at: ~/
      - *set_version_env_variable
      - run:
          name: Update git
          command: sudo apt-get install git=2.22.0
      - run:
          name: Load docker from file
          command: docker load --input docker-image.tar
      - run:
          name: Publish latest image to Docker Hub
          command: make push-latest-docker-image

  tag_version:
    <<: *default_machine_job
    steps:
      - attach_workspace:
          at: ~/
      - *set_version_env_variable
      - add_ssh_keys:
          fingerprints:
            - "df:83:d7:c7:d5:79:06:c2:3b:d1:fd:e2:a3:d1:12:c5"
      - deploy:
          name: Tag git repository
          command: make git-tag

workflows:
  version: 2
  publish:
    jobs:
      - checkout_and_compile:
          filters:
            branches:
              ignore: master
      - build_docker:
          requires:
            - checkout_and_compile
      - manual_approval:
          type: approval
          requires:
            - build_docker
      - publish_versioned:
          requires:
            - manual_approval
          context: CodacyDocker
      - tag_version:
          requires:
            - publish_versioned

  publish_master:
    jobs:
      - checkout_and_compile:
          filters:
            branches:
              only: master
      - build_docker:
          requires:
            - checkout_and_compile
      - publish_versioned:
          requires:
            - build_docker
          context: CodacyDocker
      - publish_latest:
          requires:
            - publish_versioned
          context: CodacyDocker
      - tag_version:
          requires:
            - publish_versioned
